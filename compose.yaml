---

services:
  notion-backup:
    build:
      context: .
      args:
        TIMEZONE: ${TIMEZONE}
    container_name: notion-backup
    restart: unless-stopped
    environment:
      - NOTION_API_TOKEN=${NOTION_API_TOKEN}
      - EXPORT_PATH=${CONTAINER_EXPORT_PATH}
      - B2_KEY_ID=${B2_KEY_ID}
      - B2_APPLICATION_KEY=${B2_APPLICATION_KEY}
      - B2_BUCKET_NAME=${B2_BUCKET_NAME}
      - B2_ENDPOINT_URL=${B2_ENDPOINT_URL}
      - BACKUP_METHODS=${BACKUP_METHODS}
      - BACKUP_INTERVAL=${BACKUP_INTERVAL}
      - BACKUP_TIME=${BACKUP_TIME}
      - TIMEZONE=${TIMEZONE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
    volumes:
      - notion-backup:/notion-backup
    networks:
      - backup-network

  webgui:
    build:
      context: .
      dockerfile: Dockerfile.webgui
    container_name: notion-webgui
    volumes:
      - notion-backup:/notion-backup
    ports:
      - "8080:5000"
    networks:
      - backup-network

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: notion-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backup-network

volumes:
  pgdata:
  notion-backup:

networks:
  backup-network:
    driver: bridge
      
